<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.blog.mapper.BloggerMapper">
  
  <resultMap id="BaseResultMap" type="cn.blog.pojo.Blogger">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="imag_name" jdbcType="VARCHAR" property="imagName" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="personal_information" jdbcType="LONGVARCHAR" property="personalInformation" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, username, password, nickname, sign, imag_name, salt, personal_information
  </sql>

 
  
  <select id="selectBloggerByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blogger
    where username = #{username}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_blogger
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="cn.blog.pojo.Blogger">
    insert into t_blogger (id, username, password, 
      nickname, sign, imag_name, 
      salt, personal_information)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{imagName,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{personalInformation,jdbcType=LONGVARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="cn.blog.pojo.Blogger">
    update t_blogger
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      imag_name = #{imagName,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>